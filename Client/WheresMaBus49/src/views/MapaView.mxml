<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:tilemap="com.mapquest.tilemap.*"
		title="Mapa"
		contentCreationComplete="Mapa_contentCreationCompleteHandler(event)"
		destructionPolicy="auto"
		initialize="Mapa_initializeHandler(event)">
	
	
	
	<s:states>
		<s:State name="GPSOK"/>
		<s:State name="GPSNOK"/>
		<s:State name="NOCAP"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import Assets.AlertOk;
			import Assets.Skins.SkinAlerta;
			
			import Controller.WMBController;
			
			import Eventos.EventoLocalizacao;
			import Eventos.EventoRemoteService;
			
			import Model.VO.DataResponseVo;
			import Model.VO.RequestVO;
			
			import Service.WMBService;
			
			import com.mapquest.LatLng;
			import com.mapquest.tilemap.IShape;
			import com.mapquest.tilemap.ShapeCollection;
			import com.mapquest.tilemap.Size;
			import com.mapquest.tilemap.TileMap;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			
			
			[Bindable]
			private var tmpLongLat:LatLng;
			
			
			[Bindable]
			private var tmpServiceData:DataResponseVo;
			
			[Bindable]
			private var tmpDataLocation:RequestVO;
			private var alOK:AlertOk;
			
			private var _instanciaService:WMBService= WMBService.GetInstance();
			
			// variavel para conter a singleton instace do controller
			private var  instancia:WMBController= WMBController.GetInstance();
			//
			
			protected function Mapa_contentCreationCompleteHandler(event:FlexEvent):void
			{
				
				if (( Capabilities.screenResolutionY<480)&&(Capabilities.screenResolutionX<800)){
					currentState=="NOCAP";
				}
				if (!instancia.ControllerGetGpsAvailableActive()){
					currentState=="GPSNOK";
				}
				
				
				
				
			/* 	_instanciaService.removeEventListener(EventoLocalizacao.NOK,ondataOk);
				_instanciaService.removeEventListener(EventoLocalizacao.Ok,ondataOk); */
				
				//instancia.ControllerSetMyCoordinates(tmpdata);
				tmpLongLat= new LatLng(38.134557, -98.4375);
				// adicionar pin da minha localizacao
				
				//
				
				WMBMapa= new TileMap(instancia.ControllerObtemChave(),3,tmpLongLat,"map");
				WMBMapa.size= new Size(this.width,this.height);
				WMBMapa.name="WMBMapa";
				
				/*to uncomment if (instancia.ControllerGetGpsAvailableActive()){
					this.currentState="GPSOK";
					_instanciaService.addEventListener(EventoLocalizacao.Ok,ondataOk,false,0,true);
					_instanciaService.addEventListener(EventoLocalizacao.NOK,onFault,false,0,true);
					
				}
				else{
					this.currentState="GPSNOK";
				}
				 */
				currentState="GPSOK";
			}
			
			
			// limpeza da gc e dados do mapa
			private function removeItemsMapa():void{
				if (WMBMapa.getShapeCollection("routeRibbon")) {
					this.removeShapesAndColls(WMBMapa.getShapeCollection("routeRibbon"));
					WMBMapa.removeShapeCollection(WMBMapa.getShapeCollection("routeRibbon"));
				}
				if (WMBMapa.getShapeCollection("searchShapeCollection")) {
					this.removeShapesAndColls(WMBMapa.getShapeCollection("searchShapeCollection"));
					WMBMapa.removeShapeCollection(WMBMapa.getShapeCollection("searchShapeCollection"));
				}
				
				
				this.removeShapesAndColls(WMBMapa.getShapeCollection());
			}
			
			/*
			since we're mobile, do this to free up memory faster instead of waiting for gc
			*/
			private function removeShapesAndColls(coll:ShapeCollection):void {
				var s:IShape;
				
				for (var i:int = 0; i < coll.length; i++) {
					s = coll.getShapeAtIndex(i);
					coll.remove(s);
					s = null;
				}
				
				coll = null;
			}
			//
			
			protected function ondataOk(event:EventoLocalizacao):void
			{
				_instanciaService.removeEventListener(EventoLocalizacao.NOK,ondataOk);
				_instanciaService.removeEventListener(EventoLocalizacao.Ok,ondataOk);
				var tmpdata:RequestVO= event._dadosLocation as RequestVO;
				instancia.ControllerSetMyCoordinates(tmpdata);
				tmpLongLat= new LatLng(38.134557, -98.4375);
				// adicionar pin da minha localizacao
				
				//	
				//mapa= new TileMap(instancia.ControllerObtemChave(),tmpLongLat);
				WMBMapa.size= new Size(GroupMapa.width,GroupMapa.height);
				WMBMapa.name="WMBMapa";
				
				
				// adicionar pin da minha localizacao
				
				//
			}
			
			protected function onFault(event:EventoLocalizacao):void
			{
				_instanciaService.removeEventListener(EventoLocalizacao.NOK,onFault);
				_instanciaService.removeEventListener(EventoLocalizacao.Ok,onFault);
				// TODO Auto-generated method stub
				instancia.ControllerSetGpsAvailableActive(false);
				alOK= new AlertOk;
				alOK.message= "Nao foi possivel obter a sua localizacao, volte a tentar mais tarde!";
				alOK.width = stage.width - 40;
				alOK.x = FlexGlobals.topLevelApplication.width/2 - alOK.width/2;
				alOK.y = (stage.height  - alOK.height) / 2;
				alOK.setStyle("skinClass", SkinAlerta);
				alOK.open(this, true);
			}
			
			protected function btnGetCoordinates_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				_instanciaService.addEventListener(EventoLocalizacao.Ok,onGetDataOk,false,0,true);
				_instanciaService.addEventListener(EventoLocalizacao.NOK,onGetDataFault,false,0,true);
				if (instancia.ControllerGetGpsAvailableActive()){
					instancia.ControllerGetMyCoordinates()
				}
			}
			
			protected function onGetDataFault(e:EventoLocalizacao):void
			{
				_instanciaService.removeEventListener(EventoLocalizacao.NOK,ondataOk);
				_instanciaService.removeEventListener(EventoLocalizacao.Ok,ondataOk);
				
			}
			
			protected function onGetDataOk(e:EventoLocalizacao):void
			{
				_instanciaService.removeEventListener(EventoLocalizacao.NOK,ondataOk);
				_instanciaService.removeEventListener(EventoLocalizacao.Ok,ondataOk);
				tmpDataLocation= e._dadosLocation as RequestVO;
				_instanciaService.addEventListener(EventoRemoteService.ServiceOk,onRemoteGetDataOK,false,0,true);
				_instanciaService.addEventListener(EventoRemoteService.ServiceNOK,onRemoteFault,false,0,true);
			}
			
			protected function onRemoteFault(e:EventoRemoteService):void
			{
				_instanciaService.removeEventListener(EventoRemoteService.ServiceNOK,onRemoteFault);
				_instanciaService.removeEventListener(EventoRemoteService.ServiceOk,onRemoteFault);
				
			}
			
			protected function onRemoteGetDataOK(e:EventoRemoteService):void
			{
				_instanciaService.removeEventListener(EventoRemoteService.ServiceNOK,onRemoteGetDataOK);
				_instanciaService.removeEventListener(EventoRemoteService.ServiceOk,onRemoteGetDataOK);
				tmpServiceData= e._data as DataResponseVo;
				
				
				removeItemsMapa();
			}
			
			private function GenerateMapData(){
				
			}
			
			
			
		]]>
	</fx:Script>
	
	
	<s:Group id="GroupMapa" includeIn="GPSNOK" x="10" y="10" width="95%" height="95%"
			 name="grpContainer" >
		
		<s:Label includeIn="GPSNOK" x="34" y="227" fontSize="32" name="TextoNOK"
				 text="Sem dados GPS disponiveis"/>
		
	</s:Group>
	<s:TextArea includeIn="NOCAP" x="48" y="49"  name="taNOMap"
				text="Lore IPSUM"
				width.NOCAP="80%" height.NOCAP="80%"/>
	
	<s:Group id="grpMap" includeIn="GPSOK" width="80%" height="80%" name="grpMapa"
			 x.GPSOK="40" y.GPSOK="10">
		<tilemap:TileMap name="Mapa" id="WMBMapa"/>
	</s:Group>
	<s:Button id="btnGetCoordinates" x="48" y="574" width="80%" height="100" label="WHERES MY BUS"
			  click="btnGetCoordinates_clickHandler(event)"
			  excludeFrom="GPSNOK"/>
	
	
</s:View>
